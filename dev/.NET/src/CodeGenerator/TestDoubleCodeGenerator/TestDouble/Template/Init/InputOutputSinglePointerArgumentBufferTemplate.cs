// ------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン: 17.0.0.0
//  
//     このファイルへの変更は、正しくない動作の原因になる可能性があり、
//     コードが再生成されると失われます。
// </auto-generated>
// ------------------------------------------------------------------------------
namespace TestDoubleCodeGenerator.TestDouble.Template.Init
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using TestReader.Model;
    using TestDoubleCodeGenerator.Rule;
    using Logger;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "E:\development\AutoTestPrep\dev\.NET\src\CodeGenerator\TestDoubleCodeGenerator\TestDouble\Template\Init\InputOutputSinglePointerArgumentBufferTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "17.0.0.0")]
    public partial class InputOutputSinglePointerArgumentBufferTemplate : ArgumentBufferTemplate
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            
            #line 11 "E:\development\AutoTestPrep\dev\.NET\src\CodeGenerator\TestDoubleCodeGenerator\TestDouble\Template\Init\InputOutputSinglePointerArgumentBufferTemplate.tt"
 Log.TRACE(); 
            
            #line default
            #line hidden
            
            #line 12 "E:\development\AutoTestPrep\dev\.NET\src\CodeGenerator\TestDoubleCodeGenerator\TestDouble\Template\Init\InputOutputSinglePointerArgumentBufferTemplate.tt"

	string	buffName = NameRule.ArgumentBuffer(Function, Target);
	string	inputBuffName = NameRule.SinglePointerArgumentValueBuffer(Function, Target);
	string	inputSizeBuffName = NameRule.SinglePointerArgumentValueSizeBuffer(Function, Target);
	string	returnBuffName = NameRule.SinglePointerArgumentReturnValueBuffer(Function, Target);
	string	returnSizeBuffName = NameRule.SinglePointerArgumentReturnValueSizeBuffer(Function, Target);
	string	buffSize1Macro = NameRule.BufferSize1MacroName;
	string	buffSize2Macro = NameRule.BufferSize2MacroName;

	Log.DEBUG($"{nameof(inputBuffName),16} = \"{inputBuffName}\"");
	Log.DEBUG($"{nameof(inputSizeBuffName),16} = \"{inputSizeBuffName}\"");
	Log.DEBUG($"{nameof(returnBuffName),16} = \"{returnBuffName}\"");
	Log.DEBUG($"{nameof(returnSizeBuffName),16} = \"{returnSizeBuffName}\"");

            
            #line default
            #line hidden
            this.Write("\tfor (int index1 = 0; index1 < ");
            
            #line 26 "E:\development\AutoTestPrep\dev\.NET\src\CodeGenerator\TestDoubleCodeGenerator\TestDouble\Template\Init\InputOutputSinglePointerArgumentBufferTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(buffSize1Macro));
            
            #line default
            #line hidden
            this.Write("; index1++) {\r\n\t\t");
            
            #line 27 "E:\development\AutoTestPrep\dev\.NET\src\CodeGenerator\TestDoubleCodeGenerator\TestDouble\Template\Init\InputOutputSinglePointerArgumentBufferTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(buffName));
            
            #line default
            #line hidden
            this.Write("[index1] = 0;\r\n\t\tfor (int index2 = 0; index2 < ");
            
            #line 28 "E:\development\AutoTestPrep\dev\.NET\src\CodeGenerator\TestDoubleCodeGenerator\TestDouble\Template\Init\InputOutputSinglePointerArgumentBufferTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(buffSize2Macro));
            
            #line default
            #line hidden
            this.Write("; index2++) {\r\n\t\t\t");
            
            #line 29 "E:\development\AutoTestPrep\dev\.NET\src\CodeGenerator\TestDoubleCodeGenerator\TestDouble\Template\Init\InputOutputSinglePointerArgumentBufferTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(inputBuffName));
            
            #line default
            #line hidden
            this.Write("[index1][index2] = 0;\r\n\t\t\t");
            
            #line 30 "E:\development\AutoTestPrep\dev\.NET\src\CodeGenerator\TestDoubleCodeGenerator\TestDouble\Template\Init\InputOutputSinglePointerArgumentBufferTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(returnBuffName));
            
            #line default
            #line hidden
            this.Write("[index1][index2] = 0;\r\n\t\t}\r\n\t\t");
            
            #line 32 "E:\development\AutoTestPrep\dev\.NET\src\CodeGenerator\TestDoubleCodeGenerator\TestDouble\Template\Init\InputOutputSinglePointerArgumentBufferTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(inputSizeBuffName));
            
            #line default
            #line hidden
            this.Write("[index1] = 0;\r\n\t\t");
            
            #line 33 "E:\development\AutoTestPrep\dev\.NET\src\CodeGenerator\TestDoubleCodeGenerator\TestDouble\Template\Init\InputOutputSinglePointerArgumentBufferTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(returnSizeBuffName));
            
            #line default
            #line hidden
            this.Write("[index1] = 0;\r\n\t}\r\n");
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
}
