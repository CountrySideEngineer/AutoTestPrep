// ------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン: 17.0.0.0
//  
//     このファイルへの変更は、正しくない動作の原因になる可能性があり、
//     コードが再生成されると失われます。
// </auto-generated>
// ------------------------------------------------------------------------------
namespace TestDoubleCodeGenerator.TestDouble.Template.Init
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using TestReader.Model;
    using TestDoubleCodeGenerator.Rule;
    using Logger;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "E:\development\AutoTestPrep\dev\.NET\src\CodeGenerator\TestDoubleCodeGenerator\TestDouble\Template\Init\FunctionWithReturnValueBufferTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "17.0.0.0")]
    public partial class FunctionWithReturnValueBufferTemplate : FunctionBufferTemplate
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            
            #line 11 "E:\development\AutoTestPrep\dev\.NET\src\CodeGenerator\TestDoubleCodeGenerator\TestDouble\Template\Init\FunctionWithReturnValueBufferTemplate.tt"
 Log.TRACE(); 
            
            #line default
            #line hidden
            
            #line 12 "E:\development\AutoTestPrep\dev\.NET\src\CodeGenerator\TestDoubleCodeGenerator\TestDouble\Template\Init\FunctionWithReturnValueBufferTemplate.tt"
 base.TransformText(); 
            
            #line default
            #line hidden
            
            #line 13 "E:\development\AutoTestPrep\dev\.NET\src\CodeGenerator\TestDoubleCodeGenerator\TestDouble\Template\Init\FunctionWithReturnValueBufferTemplate.tt"

	if ("void" == Target.DataType.ToLower() && (0 == Target.PointerNum))
	{
		Log.DEBUG($"{Target.Name} does not return value.");
	}
	else
	{
		string	returnValueDataType = Target.ActualDataType();
		string	returnBuffName = NameRule.ReturnValue((Function)Target);
		string	buffSizeMacro = NameRule.BufferSize1MacroName;

		Log.DEBUG($"{nameof(returnBuffName),16} = \"{returnBuffName}\"");
		Log.DEBUG($"{nameof(buffSizeMacro),16} = \"{buffSizeMacro}\"");

            
            #line default
            #line hidden
            this.Write("\tfor (int index = 0; index < ");
            
            #line 27 "E:\development\AutoTestPrep\dev\.NET\src\CodeGenerator\TestDoubleCodeGenerator\TestDouble\Template\Init\FunctionWithReturnValueBufferTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(buffSizeMacro));
            
            #line default
            #line hidden
            this.Write("; index++) {\r\n\t\t");
            
            #line 28 "E:\development\AutoTestPrep\dev\.NET\src\CodeGenerator\TestDoubleCodeGenerator\TestDouble\Template\Init\FunctionWithReturnValueBufferTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(returnBuffName));
            
            #line default
            #line hidden
            this.Write("[index] = 0;\r\n\t}\r\n");
            
            #line 30 "E:\development\AutoTestPrep\dev\.NET\src\CodeGenerator\TestDoubleCodeGenerator\TestDouble\Template\Init\FunctionWithReturnValueBufferTemplate.tt"

	}

            
            #line default
            #line hidden
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
}
