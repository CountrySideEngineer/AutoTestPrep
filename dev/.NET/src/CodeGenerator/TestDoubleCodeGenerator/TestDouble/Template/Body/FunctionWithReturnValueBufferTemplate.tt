<#@ template language="C#"
	inherits="BufferTemplateCommonBase"
#>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="TestReader.Model" #>
<#@ import namespace="TestDoubleCodeGenerator.Rule" #>
<#@ import namespace="Logger" #>
<#	
	string	calledCntBuffName = NameRule.CalledCount((Function)Target);
	string	returnValueBufferName = NameRule.ReturnValue((Function)Target);
	string	returnBufferName = "_ret_val";
	string	returnDataType = Target.ActualDataType();

	Log.DEBUG($"{nameof(calledCntBuffName), 16} = {calledCntBuffName}");
	Log.DEBUG($"{nameof(returnValueBufferName), 16} = {returnValueBufferName}");
	Log.DEBUG($"{nameof(returnBufferName), 16} = {returnBufferName}");
	Log.DEBUG($"{nameof(returnDataType), 16} = {returnDataType}");
#>
	<#=	returnDataType #>	<#= returnBufferName #> = <#= returnValueBufferName #>[<#= calledCntBuffName #>];

	<#= calledCntBuffName #>++;

	return <#= returnBufferName #>;