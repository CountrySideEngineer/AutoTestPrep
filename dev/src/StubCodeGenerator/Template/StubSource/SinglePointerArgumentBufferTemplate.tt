<#@ template language="C#"
	inherits="ArgumentBufferTemplate" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<# base.TransformText(); #>
	for (int index = 0;
		index < <#= Rule.GetSinglePointerArgumentValueSizeBuffer(Target, Argument) #>[<#= Rule.GetCalledCounter(Target) #>;
		index++)
	{
		<#= Rule.GetSinglePointerArgumentValueBuffer(Target, Argument) #>[<#= Rule.GetCalledCounter(Target) #>][index] = *(<#= Target.Name #> + index);
	}
