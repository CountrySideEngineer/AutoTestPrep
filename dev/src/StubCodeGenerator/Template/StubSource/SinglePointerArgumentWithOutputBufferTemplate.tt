<#@ template language="C#"
	inherits="SinglePointerArgumentBufferTemplate" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<# base.TransformText(); #>
	for (int index = 0;
		index < <#= Rule.GetSinglePointerArgumentReturnValueSizeBuffer(Target, Argument) #>[<#= Rule.GetCalledCounter(Target) #>];
		index++)
	{
		*(<#= Argument.Name #> + index) = <#= Rule.GetSinglePointerArgumentReturnValueBuffer(Target, Argument) #>[<#= Rule.GetCalledCounter(Target) #>][index];
	}
